[
  {
    "name": "chat-bubble",
    "dependencies": [
      "lucide-react"
    ],
    "files": [
      {
        "name": "chat-bubble.tsx",
        "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\nimport { Avatar, AvatarImage, AvatarFallback } from \"@/components/ui/avatar\"\nimport MessageLoading from \"./message-loading\"\n\nconst bubbleVariants = cva(\"flex gap-2 max-w-[60%] items-end\", {\n  variants: {\n    variant: {\n      received: \"self-start\",\n      sent: \"self-end flex-row-reverse\",\n    },\n  },\n  defaultVariants: {\n    variant: \"received\"\n  }\n})\n\ninterface ChatBubbleProps extends React.HTMLAttributes<HTMLDivElement>,\n  VariantProps<typeof bubbleVariants> { }\n\nconst ChatBubble = React.forwardRef<HTMLDivElement, ChatBubbleProps>(\n  ({ className, variant, children, ...props }, ref) => (\n    <div\n      className={cn(bubbleVariants({ variant, className }))}\n      ref={ref}\n      {...props}\n    >\n      {children}\n    </div>\n  )\n)\nChatBubble.displayName = \"ChatBubble\"\n\ninterface ChatBubbleAvatarProps {\n  src?: string\n  fallback?: string\n  className?: string\n}\n\nconst ChatBubbleAvatar: React.FC<ChatBubbleAvatarProps> = ({ src, fallback, className }) => (\n  <Avatar className={className}>\n    <AvatarImage src={src} alt=\"Avatar\" />\n    <AvatarFallback>{fallback}</AvatarFallback>\n  </Avatar>\n)\n\nconst bubbleMessageVariants = cva(\"p-4\", {\n  variants: {\n    variant: {\n      received: \"bg-secondary text-secondary-foreground rounded-r-lg rounded-tl-lg\",\n      sent: \"bg-primary text-primary-foreground rounded-l-lg rounded-tr-lg\",\n    }\n  },\n  defaultVariants: {\n    variant: \"received\"\n  }\n})\n\ninterface ChatBubbleMessageProps extends React.HTMLAttributes<HTMLDivElement>,\n  VariantProps<typeof bubbleMessageVariants> {\n  isLoading?: boolean\n}\n\nconst ChatBubbleMessage = React.forwardRef<HTMLDivElement, ChatBubbleMessageProps>(\n  ({ className, variant, isLoading = false, children, ...props }, ref) => (\n    <div\n      className={cn(bubbleMessageVariants({ variant, className }))}\n      ref={ref}\n      {...props}\n    >\n      {isLoading ? (\n        <div className=\"flex items-center space-x-2\">\n          <MessageLoading />\n        </div>\n      ) : (\n        children\n      )}\n    </div>\n  )\n)\nChatBubbleMessage.displayName = \"ChatBubbleMessage\"\n\ninterface ChatBubbleTimestampProps extends React.HTMLAttributes<HTMLDivElement> {\n  timestamp: string\n}\n\nconst ChatBubbleTimestamp: React.FC<ChatBubbleTimestampProps> = ({ timestamp, className, ...props }) => (\n  <div className={cn(\"text-xs mt-2 text-right\", className)} {...props}>\n    {timestamp}\n  </div>\n)\n\nexport {\n  ChatBubble,\n  ChatBubbleAvatar,\n  ChatBubbleMessage,\n  ChatBubbleTimestamp,\n  bubbleVariants,\n  bubbleMessageVariants\n}"
      }
    ],
    "type": "components:ui"
  }
]